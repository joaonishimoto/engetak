generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String    @id @default(uuid())
  email    String    @unique
  password String
  role     Role      @default(MEMBER)
  workDays WorkDay[]

  @@map("users")
}

model WorkDay {
  id   String   @id @default(uuid())
  day  DateTime
  work Work[]

  user   User   @relation(fields: [userId], references: [id])
  userId String

  @@map("workdays")
}

model Task {
  id          String  @id @default(uuid())
  name        String  @unique
  description String
  items       Item[]
  Work        Work[]
  Client      Client? @relation(fields: [clientId], references: [id])
  clientId    Int?

  @@map("tasks")
}

model Item {
  id          String @id @default(uuid())
  number      Int
  description String
  task        Task   @relation(fields: [taskId], references: [id])
  taskId      String
  Work        Work[]

  @@map("items")
}

model Work {
  id        String   @id @default(uuid())
  task      Task     @relation(fields: [taskId], references: [id])
  taskId    String
  item      Item     @relation(fields: [itemId], references: [id])
  itemId    String
  hours     Int // Renomeada de workingHours para hours
  WorkDay   WorkDay? @relation(fields: [workDayId], references: [id])
  workDayId String?

  @@map("works")
}

model Client {
  id          Int  @id @default(autoincrement())
  name        String
  tasks       Task[]

  @@map("clients")
}

enum Role {
  MEMBER
  ADMIN

  @@map("role")
}
